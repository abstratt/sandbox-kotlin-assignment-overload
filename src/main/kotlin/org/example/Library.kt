/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example

//@CustomAnnotation
//interface ValueProtocol<T> {
//    fun changeValue(newValue: T)
//    fun currentValue(): T?
//    fun get(): T
//    fun assign(value: T)
//}

annotation class CustomAnnotation

@CustomAnnotation
class Value<T>(var internalValue: T) {
    fun changeValue(newValue: T) {
        internalValue = newValue
    }
    fun currentValue(): T? = internalValue
    fun get(): T = internalValue!!
    fun assign(value: T) {
        println("Assigning $value")
        this.changeValue(value)
    }
    override fun toString() = "$internalValue"

}
fun <T> Value<T>.assign(value: T) {
    println("Assigning $value")
    this.changeValue(value)
}
fun <T> Value<T>.assign(value: Value<T>) {
    println("Assigning $value")
    this.changeValue(value.internalValue)
}

class AlwaysValued<T>(internalValue: T) : Value<T>(internalValue)
